# Configuração do spring security
api:
  security:
    token:
      secret: ${JWT_SECRET}
server:
  port: ${API_PORT}
  servlet:
    context-path: ${CONTEXT_PATH}
    session:
      cookie:
        timeout: 5m
        http-only: false
        secure: false
        name: SESSION_ID
        #        domain: localhost
        path: /
        same-site: strict

spring:
  application:
    name: ${API_NAME}
  web:
    cors:
      allowed-origins: ${API_CORS}
  datasource:
    url: jdbc:${DB_TYPE}://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
  # Configuração de email
  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail.smtp.auth: ${MAIL_AUTH}
      mail.smtp.starttls.enable: ${MAIL_START_TLS}
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB
  session:
    timeout: 30m
    store-type: jdbc
    jdbc:
      initialize-schema: ALWAYS
      schema: classpath:org/springframework/session/jdbc/schema-postgresql.sql
      table-name: SPRING_SESSION

  # Configura��es de JPA/Hibernate
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

  # Configura��es de perfil ativo
  profiles:
    active: ${PROFILE}

# Configura��es do swagger
springdoc:
  swagger-ui:
    path: ${SWAGGER_LINK}
cloudinary:
  api_key: ${CLOUDINARY_KEY}
  api_secret: ${CLOUDINARY_SECRET}
  cloud_name: ${CLOUDINARY_NAME}
